name: .NET

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  workflow_dispatch:

env:
  SONAR_KEY: lumen-module-sdk
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  CSPROJ: Lumen.Modules.Sdk/Lumen.Modules.Sdk.csproj
  NUGET_SERVER_ADRESS: https://api.nuget.org/v3/index.json
  NUGET_SERVER_KEY: ${{ secrets.NUGET_ORG_KEY }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup sonarscanner
      run: |
        dotnet tool install --global dotnet-sonarscanner

    - name: Start sonarscanner
      run: dotnet sonarscanner begin /k:"${{ env.SONAR_KEY }}" /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" /d:sonar.token="${{ env.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.coverage.exclusions="**Test*.cs" /d:sonar.branch.name="${{github.ref_name}}" /d:sonar.qualitygate.wait=true

    - name: Set Version in csproj
      if: startsWith(github.event.ref, 'refs/tags/')
      run: sed -i 's/>1.0.0</>${{github.ref_name}}</g' ${{ env.CSPROJ }}

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: |
        dotnet tool install --global dotnet-coverage
        dotnet-coverage collect 'dotnet test --no-build --verbosity normal' -f xml  -o 'coverage.xml'

    - name: End sonarscanner
      run: dotnet sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"

    - name: Pack
      run: dotnet pack ${{ env.CSPROJ }} -c Release -o out 
    - name: Push
      if: startsWith(github.event.ref, 'refs/tags/')
      run: dotnet nuget push -s ${{ env.NUGET_SERVER_ADRESS }} -k ${{ env.NUGET_SERVER_KEY }} $(ls out/*.nupkg | head -1)
